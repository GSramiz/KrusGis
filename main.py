import ee
import gspread
import json
import os
from datetime import datetime
from oauth2client.service_account import ServiceAccountCredentials

def initialize_services():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ –æ–¥–Ω–∏–º –∫–ª—é—á–æ–º"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        service_account_info = json.loads(os.environ["GEE_CREDENTIALS"])
        
        # 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Earth Engine
        credentials = ee.ServiceAccountCredentials(
            service_account_info['client_email'],
            key_data=json.dumps(service_account_info)
        ee.Initialize(credentials)
        print("‚úÖ Earth Engine –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

        # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets
        scope = [
            "https://www.googleapis.com/auth/spreadsheets",
            "https://www.googleapis.com/auth/drive"
        ]
        sheets_client = gspread.authorize(
            ServiceAccountCredentials.from_json_keyfile_dict(service_account_info, scope)
        print("‚úÖ Google Sheets –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω")
        
        return sheets_client

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")
        return None

def get_best_image(start_date, end_date, geometry, max_clouds=30):
    """–ü–æ–∏—Å–∫ —Å–Ω–∏–º–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –æ–±–ª–∞—á–Ω–æ—Å—Ç—å—é"""
    try:
        collection = ee.ImageCollection('COPERNICUS/S2_SR') \
            .filterDate(start_date, end_date) \
            .filterBounds(geometry) \
            .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', max_clouds)) \
            .sort('CLOUDY_PIXEL_PERCENTAGE')

        best_image = ee.Image(collection.first())
        cloud_percent = best_image.get('CLOUDY_PIXEL_PERCENTAGE').getInfo()
        
        if cloud_percent is None:
            return None, None

        print(f"üå§ –ù–∞–π–¥–µ–Ω —Å–Ω–∏–º–æ–∫ —Å –æ–±–ª–∞—á–Ω–æ—Å—Ç—å—é {cloud_percent}%")
        return best_image, cloud_percent

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Å–Ω–∏–º–∫–∞: {str(e)}")
        return None, None

def generate_thumbnail_url(image, geometry, bands=['B4', 'B3', 'B2'], min=0, max=3000):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –ø—Ä–µ–≤—å—é"""
    try:
        return image.getThumbURL({
            'bands': bands,
            'min': min,
            'max': max,
            'region': geometry
        })
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL: {str(e)}")
        return None

def update_sheet(sheets_client):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google-—Ç–∞–±–ª–∏—Ü—ã"""
    try:
        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        config = {
            "spreadsheet_id": "1oz12JnCKuM05PpHNR1gkNR_tPENazabwOGkWWeAc2hY",
            "sheet_name": "1945273513",
            "geometry": ee.Geometry.Rectangle([30, 50, 180, 80])  # –ì—Ä–∞–Ω–∏—Ü—ã –†–§
        }

        sheet = sheets_client.open_by_key(config["spreadsheet_id"]).worksheet(config["sheet_name"])
        data = sheet.get_all_values()

        for row_idx, row in enumerate(data[1:], start=2):  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            if not row[0]:  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
                continue

            try:
                month, year = row[0].split()
                start_date = f"{year}-{month}-01"
                end_date = ee.Date(start_date).advance(1, 'month').format('YYYY-MM-dd').getInfo()

                print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é {month} {year}...")

                # –ü–æ–∏—Å–∫ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–Ω–∏–º–∫–∞
                best_image, cloud_percent = get_best_image(start_date, end_date, config["geometry"])
                
                if best_image:
                    url = generate_thumbnail_url(best_image, config["geometry"])
                    if url:
                        sheet.update_cell(row_idx, 2, url)
                        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {url[:50]}...")
                    else:
                        sheet.update_cell(row_idx, 2, "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL")
                else:
                    sheet.update_cell(row_idx, 2, "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–Ω–∏–º–∫–æ–≤")

            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ {row_idx}: {str(e)}")
                sheet.update_cell(row_idx, 2, f"–û—à–∏–±–∫–∞: {str(e)}")

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–∞–±–ª–∏—Ü—ã: {str(e)}")

if __name__ == "__main__":
    client = initialize_services()
    if client:
        update_sheet(client)
    else:
        print("üõë –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã")
