import ee
import os
import json
import calendar
import time
import re
import gspread
from datetime import datetime
from google.oauth2.service_account import Credentials

# ===== 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è =====
service_account_raw = os.environ.get("GEE_CREDENTIALS")
if not service_account_raw:
    raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å—Ä–µ–¥—ã GEE_CREDENTIALS –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")

try:
    service_account_info = json.loads(service_account_raw)
except json.JSONDecodeError:
    raise ValueError("GEE_CREDENTIALS —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON")

credentials_ee = ee.ServiceAccountCredentials(
    email=service_account_info["client_email"],
    key_data=json.dumps(service_account_info)
)
ee.Initialize(credentials_ee)

scope = ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
credentials_gsheets = Credentials.from_service_account_info(service_account_info, scopes=scope)
gc = gspread.authorize(credentials_gsheets)

# ===== 2. –†–∞–±–æ—Ç–∞ —Å —Ç–∞–±–ª–∏—Ü–µ–π =====
SPREADSHEET_ID = "1oz12JnCKuM05PpHNR1gkNR_tPENazabwOGkWWeAc2hY"
worksheet = gc.open_by_key(SPREADSHEET_ID).sheet1
records = worksheet.get_all_values()[1:]  # –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞

# ===== 3. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤ =====
regions = ee.FeatureCollection("projects/ee-romantik1994/assets/region")

# ===== 4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ =====
def generate_preview_url(region_title, month_year):
    try:
        # –ì–µ–æ–º–µ—Ç—Ä–∏—è —Ä–µ–≥–∏–æ–Ω–∞
        region_feature = regions.filter(ee.Filter.eq('title', region_title)).first()
        geom = region_feature.geometry()

        # –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞—Ç—ã
        match = re.match(r"([–ê-–Ø–∞-—è]+)\s+(\d{4})", month_year.strip())
        if not match:
            print(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: {month_year}")
            return "–ù–µ—Ç —Å–Ω–∏–º–∫–æ–≤"

        month_name_rus, year = match.groups()
        month_map = {
            '–Ø–Ω–≤–∞—Ä—å': 1, '–§–µ–≤—Ä–∞–ª—å': 2, '–ú–∞—Ä—Ç': 3, '–ê–ø—Ä–µ–ª—å': 4, '–ú–∞–π': 5,
            '–ò—é–Ω—å': 6, '–ò—é–ª—å': 7, '–ê–≤–≥—É—Å—Ç': 8, '–°–µ–Ω—Ç—è–±—Ä—å': 9,
            '–û–∫—Ç—è–±—Ä—å': 10, '–ù–æ—è–±—Ä—å': 11, '–î–µ–∫–∞–±—Ä—å': 12
        }

        month = month_map.get(month_name_rus.capitalize())
        if not month:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º–µ—Å—è—Ü: {month_name_rus}")
            return "–ù–µ—Ç —Å–Ω–∏–º–∫–æ–≤"

        # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
        year = int(year)
        if year > 2025 or (year == 2025 and month > 5):
            print(f"‚è≠ –ü—Ä–æ–ø—É—Å–∫: {month_year} –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–π 2025")
            return "–ù–µ—Ç —Å–Ω–∏–º–∫–æ–≤"

        start_date = f"{year}-{month:02d}-01"
        end_day = calendar.monthrange(year, month)[1]
        end_date = f"{year}-{month:02d}-{end_day}"

        # –ö–æ–ª–ª–µ–∫—Ü–∏—è Sentinel-2
        col = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED') \
            .filterBounds(geom) \
            .filterDate(start_date, end_date) \
            .filter(ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE', 80)) \
            .map(lambda img: img.updateMask(
                img.select('SCL').neq(3)
                .And(img.select('SCL').neq(8))
                .And(img.select('SCL').neq(9))
                .And(img.select('SCL').neq(10))
            )) \
            .select(['TCI_R', 'TCI_G', 'TCI_B']) \
            .map(lambda img: img.resample('bicubic'))

        size = col.size().getInfo()
        if size == 0:
            print(f"üï≥ –ù–µ—Ç —Å–Ω–∏–º–∫–æ–≤ –∑–∞ {month_year} –≤ —Ä–µ–≥–∏–æ–Ω–µ {region_title}")
            return "–ù–µ—Ç —Å–Ω–∏–º–∫–æ–≤"

        # –ú–æ–∑–∞–∏–∫–∞ + —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ
        mosaic = col.median().convolve(
            ee.Kernel.gaussian(radius=2, sigma=1, units='pixels')
        ).clip(geom)

        map_id_dict = ee.Image(mosaic).getMapId({
            'min': 0, 'max': 3000,
            'bands': ['TCI_R', 'TCI_G', 'TCI_B'],
            'format': 'png'
        })

        return f"https://earthengine.googleapis.com/v1/projects/ee-romantik1994/maps/{map_id_dict['mapid']}/tiles/{{z}}/{{x}}/{{y}}?token={map_id_dict['token']}"

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ ({region_title}, {month_year}): {e}")
        return "–ù–µ—Ç —Å–Ω–∏–º–∫–æ–≤"

# ===== 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ =====
for i, row in enumerate(records, start=2):
    region, month_year, existing_url = row[:3]

    if existing_url.strip():
        continue

    print(f"üîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞: {region}, {month_year}")
    url_or_message = generate_preview_url(region.strip(), month_year.strip())

    worksheet.update_cell(i, 3, url_or_message)
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {url_or_message}")
    time.sleep(1.5)

print("üü¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ.")
