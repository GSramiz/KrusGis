import ee
import gspread
import json
import os
import traceback
from oauth2client.service_account import ServiceAccountCredentials

def log_error(context, error):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ —Å –¥–µ—Ç–∞–ª—è–º–∏"""
    print(f"\n‚ùå –û–®–ò–ë–ö–ê –≤ {context}:")
    print(f"–¢–∏–ø: {type(error).__name__}")
    print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {str(error)}")
    print("–°—Ç–µ–∫ –≤—ã–∑–æ–≤–æ–≤:")
    traceback.print_exc()
    print("="*50)

def initialize_services():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    try:
        print("\nüîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤...")
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if "GEE_CREDENTIALS" not in os.environ:
            raise ValueError("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è GEE_CREDENTIALS")
        
        # 2. –ó–∞–≥—Ä—É–∑–∫–∞ credentials
        try:
            service_account_info = json.loads(os.environ["GEE_CREDENTIALS"])
            required_fields = ['client_email', 'private_key', 'token_uri']
            for field in required_fields:
                if field not in service_account_info:
                    raise ValueError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ: {field}")
        except json.JSONDecodeError as e:
            raise ValueError("–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON –≤ GEE_CREDENTIALS") from e

        # 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Earth Engine
        try:
            credentials = ee.ServiceAccountCredentials(
                service_account_info['client_email'],
                key_data=json.dumps(service_account_info)
            )
            ee.Initialize(credentials)
            print("‚úÖ Earth Engine: —É—Å–ø–µ—à–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è")
        except ee.EEException as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Earth Engine: {str(e)}") from e

        # 4. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets
        try:
            scope = [
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/drive"
            ]
            sheets_client = gspread.authorize(
                ServiceAccountCredentials.from_json_keyfile_dict(service_account_info, scope)
            )
            print("‚úÖ Google Sheets: —É—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
            return sheets_client
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ Google Sheets: {str(e)}") from e

    except Exception as e:
        log_error("initialize_services", e)
        raise

def get_best_image(start_date, end_date, geometry, max_clouds=30):
    """–ü–æ–∏—Å–∫ —Å–Ω–∏–º–∫–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –æ–±–ª–∞—á–Ω–æ—Å—Ç—å—é"""
    try:
        print(f"\nüîç –ü–æ–∏—Å–∫ —Å–Ω–∏–º–∫–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥ {start_date} - {end_date}")
        
        collection = ee.ImageCollection('COPERNICUS/S2_SR') \
            .filterDate(start_date, end_date) \
            .filterBounds(geometry) \
            .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', max_clouds)) \
            .sort('CLOUDY_PIXEL_PERCENTAGE')

        if collection.size().getInfo() == 0:
            print("‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–Ω–∏–º–∫–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥")
            return None, None

        best_image = ee.Image(collection.first())
        cloud_percent = best_image.get('CLOUDY_PIXEL_PERCENTAGE').getInfo()
        
        print(f"üå§ –ù–∞–π–¥–µ–Ω —Å–Ω–∏–º–æ–∫ —Å –æ–±–ª–∞—á–Ω–æ—Å—Ç—å—é {cloud_percent}%")
        return best_image, cloud_percent

    except Exception as e:
        log_error("get_best_image", e)
        return None, None

def generate_thumbnail_url(image, geometry, bands=['B4', 'B3', 'B2'], min=0, max=3000):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –ø—Ä–µ–≤—å—é —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        print("\nüñº –ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –ø—Ä–µ–≤—å—é...")
        url = image.getThumbURL({
            'bands': bands,
            'min': min,
            'max': max,
            'region': geometry
        })
        print(f"‚úÖ URL –ø—Ä–µ–≤—å—é —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω (–¥–ª–∏–Ω–∞: {len(url)} —Å–∏–º–≤–æ–ª–æ–≤)")
        return url
    except Exception as e:
        log_error("generate_thumbnail_url", e)
        return None

def update_sheet(sheets_client):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Google-—Ç–∞–±–ª–∏—Ü—ã —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    try:
        print("\nüìä –ù–∞—á–∞–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã")
        
        config = {
            "spreadsheet_id": "1oz12JnCKuM05PpHNR1gkNR_tPENazabwOGkWWeAc2hY",
            "sheet_name": "1945273513",
            "geometry": ee.Geometry.Rectangle([30, 50, 180, 80])
        }

        # 1. –û—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        try:
            print(f"–û—Ç–∫—Ä—ã–≤–∞—é —Ç–∞–±–ª–∏—Ü—É {config['spreadsheet_id']}...")
            spreadsheet = sheets_client.open_by_key(config["spreadsheet_id"])
            print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ –Ω–∞–π–¥–µ–Ω–∞: '{spreadsheet.title}'")
        except gspread.SpreadsheetNotFound:
            raise Exception(f"–¢–∞–±–ª–∏—Ü–∞ —Å ID {config['spreadsheet_id']} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ: {str(e)}")

        # 2. –û—Ç–∫—Ä—ã—Ç–∏–µ –ª–∏—Å—Ç–∞
        try:
            worksheet = spreadsheet.worksheet(config["sheet_name"])
            print(f"‚úÖ –õ–∏—Å—Ç –Ω–∞–π–¥–µ–Ω: '{worksheet.title}'")
        except gspread.WorksheetNotFound:
            raise Exception(f"–õ–∏—Å—Ç '{config['sheet_name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ")

        # 3. –¢–µ—Å—Ç–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        try:
            print("\nüß™ –í—ã–ø–æ–ª–Ω—è—é —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ...")
            worksheet.update_cell(1, 1, "–¢–µ—Å—Ç –∏–∑ GitHub Actions")
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É: {str(e)}")

        # 4. –û—Å–Ω–æ–≤–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        try:
            print("\nüìù –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö...")
            data = worksheet.get_all_values()
            
            if not data:
                print("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞")
                return

            for row_idx, row in enumerate(data[1:], start=2):
                if not row[0]:
                    continue

                try:
                    month, year = row[0].split()
                    start_date = f"{year}-{month}-01"
                    end_date = ee.Date(start_date).advance(1, 'month').format('YYYY-MM-dd').getInfo()

                    print(f"\nüîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é {month} {year}...")
                    best_image, cloud_percent = get_best_image(start_date, end_date, config["geometry"])
                    
                    if best_image:
                        url = generate_thumbnail_url(best_image, config["geometry"])
                        if url:
                            worksheet.update_cell(row_idx, 2, url)
                            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {url[:50]}...")
                        else:
                            worksheet.update_cell(row_idx, 2, "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ URL")
                    else:
                        worksheet.update_cell(row_idx, 2, "–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Å–Ω–∏–º–∫–æ–≤")

                except Exception as e:
                    log_error(f"–æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫–∏ {row_idx}", e)
                    worksheet.update_cell(row_idx, 2, f"–û—à–∏–±–∫–∞: {str(e)[:100]}")

        except Exception as e:
            raise Exception(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}") from e

        print("\nüéâ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")

    except Exception as e:
        log_error("update_sheet", e)
        raise

if __name__ == "__main__":
    try:
        print("\nüöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞")
        client = initialize_services()
        if client:
            update_sheet(client)
        print("\n‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω")
    except Exception as e:
        log_error("–æ—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫", e)
        print("\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ - –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
        exit(1)
