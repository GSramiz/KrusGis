import ee
import json
import calendar
import time
import re
import gspread
from google.oauth2.service_account import Credentials

# ============ 1. –ó–∞–≥—Ä—É–∑–∫–∞ GEE credentials ============

with open("credentials.json", "r") as f:
    service_account_info = json.load(f)

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Earth Engine
credentials_ee = ee.ServiceAccountCredentials(
    email=service_account_info["client_email"],
    key_data=json.dumps(service_account_info)
)
ee.Initialize(credentials_ee)

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Google Sheets (—á–µ—Ä–µ–∑ google-auth)
scope = ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
credentials_gsheets = Credentials.from_service_account_info(service_account_info, scopes=scope)
gc = gspread.authorize(credentials_gsheets)

# –¢–∞–±–ª–∏—Ü–∞
SPREADSHEET_ID = "1oz12JnCKuM05PpHNR1gkNR_tPENazabwOGkWWeAc2hY"
worksheet = gc.open_by_key(SPREADSHEET_ID).sheet1

# –ö–æ–ª–æ–Ω–∫–∏: A ‚Äî –†–µ–≥–∏–æ–Ω, B ‚Äî –ú–µ—Å—è—Ü –∏ –≥–æ–¥, C ‚Äî URL –ø–æ–∫—Ä—ã—Ç–∏—è (–∞–≤—Ç–æ)
records = worksheet.get_all_values()[1:]  # –±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤ –∏–∑ Earth Engine
regions = ee.FeatureCollection("projects/ee-romantik1994/assets/region")

def generate_preview_url(region_title, month_year):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è XYZ-—Å—Å—ã–ª–∫–∏ –¥–ª—è TCI –º–æ–∑–∞–∏–∫–∏ —Å –º–∞—Å–∫–æ–π –æ–±–ª–∞–∫–æ–≤ –∏ —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ–º"""
    try:
        region_feature = regions.filter(ee.Filter.eq('title', region_title)).first()
        geom = region_feature.geometry()

        # –†–∞–∑–±–æ—Ä –¥–∞—Ç—ã
        match = re.match(r"([–ê-–Ø–∞-—è]+)\s+(\d{4})", month_year)
        if not match:
            print(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã: {month_year}")
            return None

        month_name_rus, year = match.groups()
        month_map = {
            '–Ø–Ω–≤–∞—Ä—å': 1, '–§–µ–≤—Ä–∞–ª—å': 2, '–ú–∞—Ä—Ç': 3, '–ê–ø—Ä–µ–ª—å': 4, '–ú–∞–π': 5,
            '–ò—é–Ω—å': 6, '–ò—é–ª—å': 7, '–ê–≤–≥—É—Å—Ç': 8, '–°–µ–Ω—Ç—è–±—Ä—å': 9, '–û–∫—Ç—è–±—Ä—å': 10, '–ù–æ—è–±—Ä—å': 11, '–î–µ–∫–∞–±—Ä—å': 12
        }

        month = month_map.get(month_name_rus.capitalize())
        if not month:
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –º–µ—Å—è—Ü: {month_name_rus}")
            return None

        start_date = f"{year}-{month:02d}-01"
        end_day = calendar.monthrange(int(year), month)[1]
        end_date = f"{year}-{month:02d}-{end_day}"

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ S2
        col = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED') \
            .filterBounds(geom) \
            .filterDate(start_date, end_date) \
            .filter(ee.Filter.lte('CLOUDY_PIXEL_PERCENTAGE', 80)) \
            .map(lambda img: img.updateMask(img.select('SCL').neq(3)
                                            .And(img.select('SCL').neq(8))
                                            .And(img.select('SCL').neq(9))
                                            .And(img.select('SCL').neq(10)))) \
            .select(['TCI_R', 'TCI_G', 'TCI_B']) \
            .map(lambda img: img.resample('bicubic'))

        # –ú–æ–∑–∞–∏–∫–∞ –∏ —Å–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ
        mosaic = col.median().convolve(ee.Kernel.gaussian(radius=2, sigma=1, units='pixels')).clip(geom)

        map_id_dict = ee.Image(mosaic).getMapId({
            'min': 0, 'max': 3000,
            'bands': ['TCI_R', 'TCI_G', 'TCI_B'],
            'format': 'png'
        })

        xyz_url = f"https://earthengine.googleapis.com/v1/projects/ee-romantik1994/maps/{map_id_dict['mapid']}/tiles/{{z}}/{{x}}/{{y}}?token={map_id_dict['token']}"
        return xyz_url

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –¥–ª—è {region_title} {month_year}: {e}")
        return None


# ========== –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã ==========

for i, row in enumerate(records, start=2):  # –Ω–∞—á–∏–Ω–∞—è —Å–æ 2-–π —Å—Ç—Ä–æ–∫–∏
    region, month_year, existing_url = row[:3]

    if existing_url.strip():
        continue  # —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ

    print(f"–û–±—Ä–∞–±–æ—Ç–∫–∞: {region}, {month_year}")
    url = generate_preview_url(region, month_year)
    if url:
        worksheet.update_cell(i, 3, url)
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {url}")
        time.sleep(1.5)  # —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å –ª–∏–º–∏—Ç—ã
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å URL")

print("üü¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ.")
